function check_number(n) {
    if ((+n === 2) || (+n === 3) || (+n === 5) || (+n === 7)) {
        return n
    }
    else if ((+n % 2 === 0) || (+n % 3 === 0) || (+n % 5 === 0) || (+n % 7 === 0)) {
        return "Делится";
    }
    else {
        return n
    }
}

function add_number() {   
    let amount_of_numbers = [] 
    for (let i = 0; amount_of_numbers.length < process.argv[2]; i++) {
        // console.log('выполняем')
        if (check_number(i) !== "Делится") {
            amount_of_numbers.push(check_number(i))
        }
    }
    return amount_of_numbers 
}

check_number(process.argv[2])
console.log(add_number())

// Вызываемая функция должна принимать параметр - количество первых простых чисел, которые необходимо найти.
// Функция должна возвращать массив, содержащий первые простые числа, количество которых соответствует переданному при вызове аргументу.
// Для нахождения простых чисел необхоимо использовать один из видов цикла, показанных на уроке. Не должны использоваться статические, предварительно рассчитанные наборы простых чисел.
// Примечание: простыми в математике называются числа, которые делятся без остатка только на 1 и на самих себя. Например, такими числами являются: 2, 3, 5, 7, 11, 13 и т.д. Для проверки делимости одного числа на другое можно использовать оператор получения остатка от деления %, в случае если он дает 0 в результате, делимость подтверждается:
// if (4 % 2 === 0) { console.log('И все таки оно делится!') };